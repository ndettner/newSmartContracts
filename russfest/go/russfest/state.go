// Code generated by schema tool; DO NOT EDIT.

package russfest

import (
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"
)

type MapStringToImmutableString struct {
	Proxy wasmtypes.Proxy
}

func (m MapStringToImmutableString) GetString(key string) wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(m.Proxy.Key(wasmtypes.StringToBytes(key)))
}

type MapStringToImmutableShop struct {
	Proxy wasmtypes.Proxy
}

func (m MapStringToImmutableShop) GetShop(key string) ImmutableShop {
	return ImmutableShop{Proxy: m.Proxy.Key(wasmtypes.StringToBytes(key))}
}

type ImmutableRussfestState struct {
	Proxy wasmtypes.Proxy
}

func NewImmutableRussfestState() ImmutableRussfestState {
	return ImmutableRussfestState{Proxy: wasmlib.NewStateProxy()}
}

// amount of earnedMoney
func (s ImmutableRussfestState) EarnedMoney() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(StateEarnedMoney))
}

// maps an request id to an error message
func (s ImmutableRussfestState) ErrorMessages() MapStringToImmutableString {
	return MapStringToImmutableString{Proxy: s.Proxy.Root(StateErrorMessages)}
}

// array of all musicians
func (s ImmutableRussfestState) Musicians() ArrayOfImmutableMusician {
	return ArrayOfImmutableMusician{Proxy: s.Proxy.Root(StateMusicians)}
}

// current owner of this smart contract
func (s ImmutableRussfestState) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(StateOwner))
}

// array of all products
func (s ImmutableRussfestState) Products() ArrayOfImmutableProduct {
	return ArrayOfImmutableProduct{Proxy: s.Proxy.Root(StateProducts)}
}

// array of all Shopnames
func (s ImmutableRussfestState) Shopnames() ArrayOfImmutableString {
	return ArrayOfImmutableString{Proxy: s.Proxy.Root(StateShopnames)}
}

// map of all Shops
func (s ImmutableRussfestState) Shops() MapStringToImmutableShop {
	return MapStringToImmutableShop{Proxy: s.Proxy.Root(StateShops)}
}

// ordered array of timeslots
func (s ImmutableRussfestState) Timeslots() ArrayOfImmutableTimeslot {
	return ArrayOfImmutableTimeslot{Proxy: s.Proxy.Root(StateTimeslots)}
}

type MapStringToMutableString struct {
	Proxy wasmtypes.Proxy
}

func (m MapStringToMutableString) Clear() {
	m.Proxy.ClearMap()
}

func (m MapStringToMutableString) GetString(key string) wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(m.Proxy.Key(wasmtypes.StringToBytes(key)))
}

type MapStringToMutableShop struct {
	Proxy wasmtypes.Proxy
}

func (m MapStringToMutableShop) Clear() {
	m.Proxy.ClearMap()
}

func (m MapStringToMutableShop) GetShop(key string) MutableShop {
	return MutableShop{Proxy: m.Proxy.Key(wasmtypes.StringToBytes(key))}
}

type MutableRussfestState struct {
	Proxy wasmtypes.Proxy
}

func NewMutableRussfestState() MutableRussfestState {
	return MutableRussfestState{Proxy: wasmlib.NewStateProxy()}
}

func (s MutableRussfestState) AsImmutable() ImmutableRussfestState {
	return ImmutableRussfestState(s)
}

// amount of earnedMoney
func (s MutableRussfestState) EarnedMoney() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(StateEarnedMoney))
}

// maps an request id to an error message
func (s MutableRussfestState) ErrorMessages() MapStringToMutableString {
	return MapStringToMutableString{Proxy: s.Proxy.Root(StateErrorMessages)}
}

// array of all musicians
func (s MutableRussfestState) Musicians() ArrayOfMutableMusician {
	return ArrayOfMutableMusician{Proxy: s.Proxy.Root(StateMusicians)}
}

// current owner of this smart contract
func (s MutableRussfestState) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(StateOwner))
}

// array of all products
func (s MutableRussfestState) Products() ArrayOfMutableProduct {
	return ArrayOfMutableProduct{Proxy: s.Proxy.Root(StateProducts)}
}

// array of all Shopnames
func (s MutableRussfestState) Shopnames() ArrayOfMutableString {
	return ArrayOfMutableString{Proxy: s.Proxy.Root(StateShopnames)}
}

// map of all Shops
func (s MutableRussfestState) Shops() MapStringToMutableShop {
	return MapStringToMutableShop{Proxy: s.Proxy.Root(StateShops)}
}

// ordered array of timeslots
func (s MutableRussfestState) Timeslots() ArrayOfMutableTimeslot {
	return ArrayOfMutableTimeslot{Proxy: s.Proxy.Root(StateTimeslots)}
}
