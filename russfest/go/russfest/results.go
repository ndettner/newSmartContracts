// Code generated by schema tool; DO NOT EDIT.

package russfest

import (
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib"
	"github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"
)

type ImmutableCallCheckProductResults struct {
	Proxy wasmtypes.Proxy
}

// shows if SC can produce Product
func (s ImmutableCallCheckProductResults) CanProduce() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.Proxy.Root(ResultCanProduce))
}

// optional error message
func (s ImmutableCallCheckProductResults) Message() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.Proxy.Root(ResultMessage))
}

type MutableCallCheckProductResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableCallCheckProductResults() MutableCallCheckProductResults {
	return MutableCallCheckProductResults{Proxy: wasmlib.NewResultsProxy()}
}

// shows if SC can produce Product
func (s MutableCallCheckProductResults) CanProduce() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.Proxy.Root(ResultCanProduce))
}

// optional error message
func (s MutableCallCheckProductResults) Message() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.Proxy.Root(ResultMessage))
}

type ImmutableCallPingShopResults struct {
	Proxy wasmtypes.Proxy
}

// shows if ping was successful
func (s ImmutableCallPingShopResults) PingSuccessful() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.Proxy.Root(ResultPingSuccessful))
}

type MutableCallPingShopResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableCallPingShopResults() MutableCallPingShopResults {
	return MutableCallPingShopResults{Proxy: wasmlib.NewResultsProxy()}
}

// shows if ping was successful
func (s MutableCallPingShopResults) PingSuccessful() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.Proxy.Root(ResultPingSuccessful))
}

type ArrayOfImmutableProduct struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableProduct) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfImmutableProduct) GetProduct(index uint32) ImmutableProduct {
	return ImmutableProduct{Proxy: a.Proxy.Index(index)}
}

type ImmutableCallRecieveProductsResults struct {
	Proxy wasmtypes.Proxy
}

// products that are ready to ship to russfest
func (s ImmutableCallRecieveProductsResults) Product() ArrayOfImmutableProduct {
	return ArrayOfImmutableProduct{Proxy: s.Proxy.Root(ResultProduct)}
}

type ArrayOfMutableProduct struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfMutableProduct) AppendProduct() MutableProduct {
	return MutableProduct{Proxy: a.Proxy.Append()}
}

func (a ArrayOfMutableProduct) Clear() {
	a.Proxy.ClearArray()
}

func (a ArrayOfMutableProduct) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfMutableProduct) GetProduct(index uint32) MutableProduct {
	return MutableProduct{Proxy: a.Proxy.Index(index)}
}

type MutableCallRecieveProductsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableCallRecieveProductsResults() MutableCallRecieveProductsResults {
	return MutableCallRecieveProductsResults{Proxy: wasmlib.NewResultsProxy()}
}

// products that are ready to ship to russfest
func (s MutableCallRecieveProductsResults) Product() ArrayOfMutableProduct {
	return ArrayOfMutableProduct{Proxy: s.Proxy.Root(ResultProduct)}
}

type ArrayOfImmutableStatisticProduct struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableStatisticProduct) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfImmutableStatisticProduct) GetStatisticProduct(index uint32) ImmutableStatisticProduct {
	return ImmutableStatisticProduct{Proxy: a.Proxy.Index(index)}
}

type ArrayOfImmutableProductTemplate struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableProductTemplate) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfImmutableProductTemplate) GetProductTemplate(index uint32) ImmutableProductTemplate {
	return ImmutableProductTemplate{Proxy: a.Proxy.Index(index)}
}

type ImmutableCallGetShopStatisticsResults struct {
	Proxy wasmtypes.Proxy
}

// earnings of shop
func (s ImmutableCallGetShopStatisticsResults) Earnings() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultEarnings))
}

// max production step for this shop
func (s ImmutableCallGetShopStatisticsResults) MaxProductionsStep() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultMaxProductionsStep))
}

// produced Products for this Shop
func (s ImmutableCallGetShopStatisticsResults) ProducedProducts() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultProducedProducts))
}

// all Products that currently are in production
func (s ImmutableCallGetShopStatisticsResults) Production() ArrayOfImmutableStatisticProduct {
	return ArrayOfImmutableStatisticProduct{Proxy: s.Proxy.Root(ResultProduction)}
}

// all ProductTemplates that exist for this shop
func (s ImmutableCallGetShopStatisticsResults) ProductionTemplates() ArrayOfImmutableProductTemplate {
	return ArrayOfImmutableProductTemplate{Proxy: s.Proxy.Root(ResultProductionTemplates)}
}

// sold porducts for this shop
func (s ImmutableCallGetShopStatisticsResults) SoldProducts() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultSoldProducts))
}

type ArrayOfMutableStatisticProduct struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfMutableStatisticProduct) AppendStatisticProduct() MutableStatisticProduct {
	return MutableStatisticProduct{Proxy: a.Proxy.Append()}
}

func (a ArrayOfMutableStatisticProduct) Clear() {
	a.Proxy.ClearArray()
}

func (a ArrayOfMutableStatisticProduct) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfMutableStatisticProduct) GetStatisticProduct(index uint32) MutableStatisticProduct {
	return MutableStatisticProduct{Proxy: a.Proxy.Index(index)}
}

type ArrayOfMutableProductTemplate struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfMutableProductTemplate) AppendProductTemplate() MutableProductTemplate {
	return MutableProductTemplate{Proxy: a.Proxy.Append()}
}

func (a ArrayOfMutableProductTemplate) Clear() {
	a.Proxy.ClearArray()
}

func (a ArrayOfMutableProductTemplate) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfMutableProductTemplate) GetProductTemplate(index uint32) MutableProductTemplate {
	return MutableProductTemplate{Proxy: a.Proxy.Index(index)}
}

type MutableCallGetShopStatisticsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableCallGetShopStatisticsResults() MutableCallGetShopStatisticsResults {
	return MutableCallGetShopStatisticsResults{Proxy: wasmlib.NewResultsProxy()}
}

// earnings of shop
func (s MutableCallGetShopStatisticsResults) Earnings() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultEarnings))
}

// max production step for this shop
func (s MutableCallGetShopStatisticsResults) MaxProductionsStep() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultMaxProductionsStep))
}

// produced Products for this Shop
func (s MutableCallGetShopStatisticsResults) ProducedProducts() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultProducedProducts))
}

// all Products that currently are in production
func (s MutableCallGetShopStatisticsResults) Production() ArrayOfMutableStatisticProduct {
	return ArrayOfMutableStatisticProduct{Proxy: s.Proxy.Root(ResultProduction)}
}

// all ProductTemplates that exist for this shop
func (s MutableCallGetShopStatisticsResults) ProductionTemplates() ArrayOfMutableProductTemplate {
	return ArrayOfMutableProductTemplate{Proxy: s.Proxy.Root(ResultProductionTemplates)}
}

// sold porducts for this shop
func (s MutableCallGetShopStatisticsResults) SoldProducts() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultSoldProducts))
}

type ImmutableGetAgendIDResults struct {
	Proxy wasmtypes.Proxy
}

// AgentID of SC
func (s ImmutableGetAgendIDResults) ScAgentID() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ResultScAgentID))
}

type MutableGetAgendIDResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetAgendIDResults() MutableGetAgendIDResults {
	return MutableGetAgendIDResults{Proxy: wasmlib.NewResultsProxy()}
}

// AgentID of SC
func (s MutableGetAgendIDResults) ScAgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ResultScAgentID))
}

type ArrayOfImmutableShop struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableShop) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfImmutableShop) GetShop(index uint32) ImmutableShop {
	return ImmutableShop{Proxy: a.Proxy.Index(index)}
}

type ImmutableGetAllOpenShopRequestsResults struct {
	Proxy wasmtypes.Proxy
}

// all open Shop requests
func (s ImmutableGetAllOpenShopRequestsResults) OpenShopRequest() ArrayOfImmutableShop {
	return ArrayOfImmutableShop{Proxy: s.Proxy.Root(ResultOpenShopRequest)}
}

type ArrayOfMutableShop struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfMutableShop) AppendShop() MutableShop {
	return MutableShop{Proxy: a.Proxy.Append()}
}

func (a ArrayOfMutableShop) Clear() {
	a.Proxy.ClearArray()
}

func (a ArrayOfMutableShop) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfMutableShop) GetShop(index uint32) MutableShop {
	return MutableShop{Proxy: a.Proxy.Index(index)}
}

type MutableGetAllOpenShopRequestsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetAllOpenShopRequestsResults() MutableGetAllOpenShopRequestsResults {
	return MutableGetAllOpenShopRequestsResults{Proxy: wasmlib.NewResultsProxy()}
}

// all open Shop requests
func (s MutableGetAllOpenShopRequestsResults) OpenShopRequest() ArrayOfMutableShop {
	return ArrayOfMutableShop{Proxy: s.Proxy.Root(ResultOpenShopRequest)}
}

type ImmutableGetAllProductsResults struct {
	Proxy wasmtypes.Proxy
}

// get all available Products
func (s ImmutableGetAllProductsResults) Products() ArrayOfImmutableProduct {
	return ArrayOfImmutableProduct{Proxy: s.Proxy.Root(ResultProducts)}
}

type MutableGetAllProductsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetAllProductsResults() MutableGetAllProductsResults {
	return MutableGetAllProductsResults{Proxy: wasmlib.NewResultsProxy()}
}

// get all available Products
func (s MutableGetAllProductsResults) Products() ArrayOfMutableProduct {
	return ArrayOfMutableProduct{Proxy: s.Proxy.Root(ResultProducts)}
}

type ImmutableGetAllRegisteredShopsResults struct {
	Proxy wasmtypes.Proxy
}

// all registered shops
func (s ImmutableGetAllRegisteredShopsResults) Shops() ArrayOfImmutableShop {
	return ArrayOfImmutableShop{Proxy: s.Proxy.Root(ResultShops)}
}

type MutableGetAllRegisteredShopsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetAllRegisteredShopsResults() MutableGetAllRegisteredShopsResults {
	return MutableGetAllRegisteredShopsResults{Proxy: wasmlib.NewResultsProxy()}
}

// all registered shops
func (s MutableGetAllRegisteredShopsResults) Shops() ArrayOfMutableShop {
	return ArrayOfMutableShop{Proxy: s.Proxy.Root(ResultShops)}
}

type ImmutableGetDeniedShopRequestsResults struct {
	Proxy wasmtypes.Proxy
}

// all denied Shop request of Shop owner
func (s ImmutableGetDeniedShopRequestsResults) DeniedShopRequests() ArrayOfImmutableShop {
	return ArrayOfImmutableShop{Proxy: s.Proxy.Root(ResultDeniedShopRequests)}
}

type MutableGetDeniedShopRequestsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetDeniedShopRequestsResults() MutableGetDeniedShopRequestsResults {
	return MutableGetDeniedShopRequestsResults{Proxy: wasmlib.NewResultsProxy()}
}

// all denied Shop request of Shop owner
func (s MutableGetDeniedShopRequestsResults) DeniedShopRequests() ArrayOfMutableShop {
	return ArrayOfMutableShop{Proxy: s.Proxy.Root(ResultDeniedShopRequests)}
}

type ImmutableGetErrorMessagesViewResults struct {
	Proxy wasmtypes.Proxy
}

func (s ImmutableGetErrorMessagesViewResults) ErrorMessage() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.Proxy.Root(ResultErrorMessage))
}

type MutableGetErrorMessagesViewResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetErrorMessagesViewResults() MutableGetErrorMessagesViewResults {
	return MutableGetErrorMessagesViewResults{Proxy: wasmlib.NewResultsProxy()}
}

func (s MutableGetErrorMessagesViewResults) ErrorMessage() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.Proxy.Root(ResultErrorMessage))
}

type ImmutableGetFestivalEarningsResults struct {
	Proxy wasmtypes.Proxy
}

// earnings of festival
func (s ImmutableGetFestivalEarningsResults) FestivalEarnings() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultFestivalEarnings))
}

type MutableGetFestivalEarningsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetFestivalEarningsResults() MutableGetFestivalEarningsResults {
	return MutableGetFestivalEarningsResults{Proxy: wasmlib.NewResultsProxy()}
}

// earnings of festival
func (s MutableGetFestivalEarningsResults) FestivalEarnings() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultFestivalEarnings))
}

type ArrayOfImmutableMusician struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableMusician) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfImmutableMusician) GetMusician(index uint32) ImmutableMusician {
	return ImmutableMusician{Proxy: a.Proxy.Index(index)}
}

type ImmutableGetMusiciansResults struct {
	Proxy wasmtypes.Proxy
}

// all known Musicians
func (s ImmutableGetMusiciansResults) Musicians() ArrayOfImmutableMusician {
	return ArrayOfImmutableMusician{Proxy: s.Proxy.Root(ResultMusicians)}
}

type ArrayOfMutableMusician struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfMutableMusician) AppendMusician() MutableMusician {
	return MutableMusician{Proxy: a.Proxy.Append()}
}

func (a ArrayOfMutableMusician) Clear() {
	a.Proxy.ClearArray()
}

func (a ArrayOfMutableMusician) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfMutableMusician) GetMusician(index uint32) MutableMusician {
	return MutableMusician{Proxy: a.Proxy.Index(index)}
}

type MutableGetMusiciansResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetMusiciansResults() MutableGetMusiciansResults {
	return MutableGetMusiciansResults{Proxy: wasmlib.NewResultsProxy()}
}

// all known Musicians
func (s MutableGetMusiciansResults) Musicians() ArrayOfMutableMusician {
	return ArrayOfMutableMusician{Proxy: s.Proxy.Root(ResultMusicians)}
}

type ImmutableGetMusiciansWithoutShopResults struct {
	Proxy wasmtypes.Proxy
}

// all known Musicians without Shop
func (s ImmutableGetMusiciansWithoutShopResults) MusiciansWithoutShop() ArrayOfImmutableMusician {
	return ArrayOfImmutableMusician{Proxy: s.Proxy.Root(ResultMusiciansWithoutShop)}
}

type MutableGetMusiciansWithoutShopResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetMusiciansWithoutShopResults() MutableGetMusiciansWithoutShopResults {
	return MutableGetMusiciansWithoutShopResults{Proxy: wasmlib.NewResultsProxy()}
}

// all known Musicians without Shop
func (s MutableGetMusiciansWithoutShopResults) MusiciansWithoutShop() ArrayOfMutableMusician {
	return ArrayOfMutableMusician{Proxy: s.Proxy.Root(ResultMusiciansWithoutShop)}
}

type ImmutableGetOpenShopRequestResults struct {
	Proxy wasmtypes.Proxy
}

// all open Shop requests from specified shop owner
func (s ImmutableGetOpenShopRequestResults) OpenShopRequest() ArrayOfImmutableShop {
	return ArrayOfImmutableShop{Proxy: s.Proxy.Root(ResultOpenShopRequest)}
}

type MutableGetOpenShopRequestResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetOpenShopRequestResults() MutableGetOpenShopRequestResults {
	return MutableGetOpenShopRequestResults{Proxy: wasmlib.NewResultsProxy()}
}

// all open Shop requests from specified shop owner
func (s MutableGetOpenShopRequestResults) OpenShopRequest() ArrayOfMutableShop {
	return ArrayOfMutableShop{Proxy: s.Proxy.Root(ResultOpenShopRequest)}
}

type ImmutableGetOwnerResults struct {
	Proxy wasmtypes.Proxy
}

// current owner of this smart contract
func (s ImmutableGetOwnerResults) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.Proxy.Root(ResultOwner))
}

type MutableGetOwnerResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetOwnerResults() MutableGetOwnerResults {
	return MutableGetOwnerResults{Proxy: wasmlib.NewResultsProxy()}
}

// current owner of this smart contract
func (s MutableGetOwnerResults) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.Proxy.Root(ResultOwner))
}

type ImmutableGetRegisteredShopsFromOwnerResults struct {
	Proxy wasmtypes.Proxy
}

// all registered shops from owner
func (s ImmutableGetRegisteredShopsFromOwnerResults) OwnerShops() ArrayOfImmutableShop {
	return ArrayOfImmutableShop{Proxy: s.Proxy.Root(ResultOwnerShops)}
}

type MutableGetRegisteredShopsFromOwnerResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetRegisteredShopsFromOwnerResults() MutableGetRegisteredShopsFromOwnerResults {
	return MutableGetRegisteredShopsFromOwnerResults{Proxy: wasmlib.NewResultsProxy()}
}

// all registered shops from owner
func (s MutableGetRegisteredShopsFromOwnerResults) OwnerShops() ArrayOfMutableShop {
	return ArrayOfMutableShop{Proxy: s.Proxy.Root(ResultOwnerShops)}
}

type ImmutableGetShopStatisticsResults struct {
	Proxy wasmtypes.Proxy
}

// earnings of shop
func (s ImmutableGetShopStatisticsResults) Earnings() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultEarnings))
}

// max production step for this shop
func (s ImmutableGetShopStatisticsResults) MaxProductionsStep() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultMaxProductionsStep))
}

// name of the musician
func (s ImmutableGetShopStatisticsResults) Musician() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.Proxy.Root(ResultMusician))
}

// produced Products for this Shop
func (s ImmutableGetShopStatisticsResults) ProducedProducts() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultProducedProducts))
}

// all Products that currently are in production
func (s ImmutableGetShopStatisticsResults) Production() ArrayOfImmutableStatisticProduct {
	return ArrayOfImmutableStatisticProduct{Proxy: s.Proxy.Root(ResultProduction)}
}

// all ProductTemplates that exist for this shop
func (s ImmutableGetShopStatisticsResults) ProductionTemplates() ArrayOfImmutableProductTemplate {
	return ArrayOfImmutableProductTemplate{Proxy: s.Proxy.Root(ResultProductionTemplates)}
}

// name of the Shop
func (s ImmutableGetShopStatisticsResults) ShopName() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.Proxy.Root(ResultShopName))
}

// sold porducts for this shop
func (s ImmutableGetShopStatisticsResults) SoldProducts() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.Proxy.Root(ResultSoldProducts))
}

type MutableGetShopStatisticsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetShopStatisticsResults() MutableGetShopStatisticsResults {
	return MutableGetShopStatisticsResults{Proxy: wasmlib.NewResultsProxy()}
}

// earnings of shop
func (s MutableGetShopStatisticsResults) Earnings() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultEarnings))
}

// max production step for this shop
func (s MutableGetShopStatisticsResults) MaxProductionsStep() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultMaxProductionsStep))
}

// name of the musician
func (s MutableGetShopStatisticsResults) Musician() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.Proxy.Root(ResultMusician))
}

// produced Products for this Shop
func (s MutableGetShopStatisticsResults) ProducedProducts() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultProducedProducts))
}

// all Products that currently are in production
func (s MutableGetShopStatisticsResults) Production() ArrayOfMutableStatisticProduct {
	return ArrayOfMutableStatisticProduct{Proxy: s.Proxy.Root(ResultProduction)}
}

// all ProductTemplates that exist for this shop
func (s MutableGetShopStatisticsResults) ProductionTemplates() ArrayOfMutableProductTemplate {
	return ArrayOfMutableProductTemplate{Proxy: s.Proxy.Root(ResultProductionTemplates)}
}

// name of the Shop
func (s MutableGetShopStatisticsResults) ShopName() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.Proxy.Root(ResultShopName))
}

// sold porducts for this shop
func (s MutableGetShopStatisticsResults) SoldProducts() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.Proxy.Root(ResultSoldProducts))
}

type ImmutableGetSpecificProductsResults struct {
	Proxy wasmtypes.Proxy
}

// get all available Products of specific Musician
func (s ImmutableGetSpecificProductsResults) Products() ArrayOfImmutableProduct {
	return ArrayOfImmutableProduct{Proxy: s.Proxy.Root(ResultProducts)}
}

type MutableGetSpecificProductsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetSpecificProductsResults() MutableGetSpecificProductsResults {
	return MutableGetSpecificProductsResults{Proxy: wasmlib.NewResultsProxy()}
}

// get all available Products of specific Musician
func (s MutableGetSpecificProductsResults) Products() ArrayOfMutableProduct {
	return ArrayOfMutableProduct{Proxy: s.Proxy.Root(ResultProducts)}
}

type ArrayOfImmutableTimeslot struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableTimeslot) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfImmutableTimeslot) GetTimeslot(index uint32) ImmutableTimeslot {
	return ImmutableTimeslot{Proxy: a.Proxy.Index(index)}
}

type ImmutableGetTimeslotsResults struct {
	Proxy wasmtypes.Proxy
}

// all filled timeslots
func (s ImmutableGetTimeslotsResults) Timeslots() ArrayOfImmutableTimeslot {
	return ArrayOfImmutableTimeslot{Proxy: s.Proxy.Root(ResultTimeslots)}
}

type ArrayOfMutableTimeslot struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfMutableTimeslot) AppendTimeslot() MutableTimeslot {
	return MutableTimeslot{Proxy: a.Proxy.Append()}
}

func (a ArrayOfMutableTimeslot) Clear() {
	a.Proxy.ClearArray()
}

func (a ArrayOfMutableTimeslot) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfMutableTimeslot) GetTimeslot(index uint32) MutableTimeslot {
	return MutableTimeslot{Proxy: a.Proxy.Index(index)}
}

type MutableGetTimeslotsResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableGetTimeslotsResults() MutableGetTimeslotsResults {
	return MutableGetTimeslotsResults{Proxy: wasmlib.NewResultsProxy()}
}

// all filled timeslots
func (s MutableGetTimeslotsResults) Timeslots() ArrayOfMutableTimeslot {
	return ArrayOfMutableTimeslot{Proxy: s.Proxy.Root(ResultTimeslots)}
}

type ArrayOfImmutableString struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableString) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfImmutableString) GetString(index uint32) wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(a.Proxy.Index(index))
}

type ImmutableTestViewResults struct {
	Proxy wasmtypes.Proxy
}

// array of test Strings
func (s ImmutableTestViewResults) TestString() ArrayOfImmutableString {
	return ArrayOfImmutableString{Proxy: s.Proxy.Root(ResultTestString)}
}

type ArrayOfMutableString struct {
	Proxy wasmtypes.Proxy
}

func (a ArrayOfMutableString) AppendString() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(a.Proxy.Append())
}

func (a ArrayOfMutableString) Clear() {
	a.Proxy.ClearArray()
}

func (a ArrayOfMutableString) Length() uint32 {
	return a.Proxy.Length()
}

func (a ArrayOfMutableString) GetString(index uint32) wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(a.Proxy.Index(index))
}

type MutableTestViewResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableTestViewResults() MutableTestViewResults {
	return MutableTestViewResults{Proxy: wasmlib.NewResultsProxy()}
}

// array of test Strings
func (s MutableTestViewResults) TestString() ArrayOfMutableString {
	return ArrayOfMutableString{Proxy: s.Proxy.Root(ResultTestString)}
}

type ImmutableTestViewSingleResults struct {
	Proxy wasmtypes.Proxy
}

// single String
func (s ImmutableTestViewSingleResults) SingeString() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.Proxy.Root(ResultSingeString))
}

type MutableTestViewSingleResults struct {
	Proxy wasmtypes.Proxy
}

func NewMutableTestViewSingleResults() MutableTestViewSingleResults {
	return MutableTestViewSingleResults{Proxy: wasmlib.NewResultsProxy()}
}

// single String
func (s MutableTestViewSingleResults) SingeString() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.Proxy.Root(ResultSingeString))
}
