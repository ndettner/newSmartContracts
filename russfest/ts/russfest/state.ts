// Code generated by schema tool; DO NOT EDIT.

import * as wasmtypes from 'wasmlib/wasmtypes';
import * as sc from './index';

export class MapStringToImmutableString extends wasmtypes.ScProxy {

    getString(key: string): wasmtypes.ScImmutableString {
        return new wasmtypes.ScImmutableString(this.proxy.key(wasmtypes.stringToBytes(key)));
    }
}

export class MapStringToImmutableShop extends wasmtypes.ScProxy {

    getShop(key: string): sc.ImmutableShop {
        return new sc.ImmutableShop(this.proxy.key(wasmtypes.stringToBytes(key)));
    }
}

export class ImmutableRussfestState extends wasmtypes.ScProxy {
    // amount of earnedMoney
    earnedMoney(): wasmtypes.ScImmutableUint64 {
        return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.StateEarnedMoney));
    }

    // maps an request id to an error message
    errorMessages(): sc.MapStringToImmutableString {
        return new sc.MapStringToImmutableString(this.proxy.root(sc.StateErrorMessages));
    }

    // array of all musicians
    musicians(): sc.ArrayOfImmutableMusician {
        return new sc.ArrayOfImmutableMusician(this.proxy.root(sc.StateMusicians));
    }

    // current owner of this smart contract
    owner(): wasmtypes.ScImmutableAgentID {
        return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.StateOwner));
    }

    // array of all products
    products(): sc.ArrayOfImmutableProduct {
        return new sc.ArrayOfImmutableProduct(this.proxy.root(sc.StateProducts));
    }

    // array of all Shopnames
    shopnames(): sc.ArrayOfImmutableString {
        return new sc.ArrayOfImmutableString(this.proxy.root(sc.StateShopnames));
    }

    // map of all Shops
    shops(): sc.MapStringToImmutableShop {
        return new sc.MapStringToImmutableShop(this.proxy.root(sc.StateShops));
    }

    // ordered array of timeslots
    timeslots(): sc.ArrayOfImmutableTimeslot {
        return new sc.ArrayOfImmutableTimeslot(this.proxy.root(sc.StateTimeslots));
    }
}

export class MapStringToMutableString extends wasmtypes.ScProxy {

    clear(): void {
        this.proxy.clearMap();
    }

    getString(key: string): wasmtypes.ScMutableString {
        return new wasmtypes.ScMutableString(this.proxy.key(wasmtypes.stringToBytes(key)));
    }
}

export class MapStringToMutableShop extends wasmtypes.ScProxy {

    clear(): void {
        this.proxy.clearMap();
    }

    getShop(key: string): sc.MutableShop {
        return new sc.MutableShop(this.proxy.key(wasmtypes.stringToBytes(key)));
    }
}

export class MutableRussfestState extends wasmtypes.ScProxy {
    asImmutable(): sc.ImmutableRussfestState {
        return new sc.ImmutableRussfestState(this.proxy);
    }

    // amount of earnedMoney
    earnedMoney(): wasmtypes.ScMutableUint64 {
        return new wasmtypes.ScMutableUint64(this.proxy.root(sc.StateEarnedMoney));
    }

    // maps an request id to an error message
    errorMessages(): sc.MapStringToMutableString {
        return new sc.MapStringToMutableString(this.proxy.root(sc.StateErrorMessages));
    }

    // array of all musicians
    musicians(): sc.ArrayOfMutableMusician {
        return new sc.ArrayOfMutableMusician(this.proxy.root(sc.StateMusicians));
    }

    // current owner of this smart contract
    owner(): wasmtypes.ScMutableAgentID {
        return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.StateOwner));
    }

    // array of all products
    products(): sc.ArrayOfMutableProduct {
        return new sc.ArrayOfMutableProduct(this.proxy.root(sc.StateProducts));
    }

    // array of all Shopnames
    shopnames(): sc.ArrayOfMutableString {
        return new sc.ArrayOfMutableString(this.proxy.root(sc.StateShopnames));
    }

    // map of all Shops
    shops(): sc.MapStringToMutableShop {
        return new sc.MapStringToMutableShop(this.proxy.root(sc.StateShops));
    }

    // ordered array of timeslots
    timeslots(): sc.ArrayOfMutableTimeslot {
        return new sc.ArrayOfMutableTimeslot(this.proxy.root(sc.StateTimeslots));
    }
}
